"""
Generated by generator/generator.py - 2024-06-22 16:23:41.214380
"""
from pyalko.objects.device import AlkoDevice
from tests.responses.device_fixture import device_fixture_response

def test_device(device_fixture_response):
    obj = AlkoDevice(device_fixture_response)
    assert obj.thingName == device_fixture_response['thingName']
    assert obj.thingType == device_fixture_response['thingType']
    assert obj.thingAttributes.thingName == device_fixture_response['thingAttributes']['thingName']
    assert obj.thingAttributes.thingType == device_fixture_response['thingAttributes']['thingType']
    assert obj.thingAttributes.articleNumber == device_fixture_response['thingAttributes']['articleNumber']
    assert obj.thingAttributes.serialNumber == device_fixture_response['thingAttributes']['serialNumber']
    assert obj.thingAttributes.firmwareWifi == device_fixture_response['thingAttributes']['firmwareWifi']
    assert obj.thingAttributes.hardwareVersionWifi == device_fixture_response['thingAttributes']['hardwareVersionWifi']
    assert obj.thingAttributes.firmwareMain == device_fixture_response['thingAttributes']['firmwareMain']
    assert obj.thingAttributes.firmwareMainLocalization == device_fixture_response['thingAttributes']['firmwareMainLocalization']
    assert obj.thingAttributes.serialNumberMain == device_fixture_response['thingAttributes']['serialNumberMain']
    assert obj.thingAttributes.hardwareVersionMain == device_fixture_response['thingAttributes']['hardwareVersionMain']
    assert obj.thingAttributes.thingModel == device_fixture_response['thingAttributes']['thingModel']
    assert obj.thingAttributes.firmwareWifiDriver == device_fixture_response['thingAttributes']['firmwareWifiDriver']
    assert obj.thingAttributes.serialNumberWifi == device_fixture_response['thingAttributes']['serialNumberWifi']
    assert obj.thingAttributes.fotaMode == device_fixture_response['thingAttributes']['fotaMode']
    assert obj.thingAttributes.betatester == device_fixture_response['thingAttributes']['betatester']
    assert obj.accessInformation.accessId == device_fixture_response['accessInformation']['accessId']
    assert obj.accessInformation.thingName == device_fixture_response['accessInformation']['thingName']
    assert obj.accessInformation.userId == device_fixture_response['accessInformation']['userId']
    assert obj.accessInformation.idpAccountId == device_fixture_response['accessInformation']['idpAccountId']
    assert obj.accessInformation.userEmail == device_fixture_response['accessInformation']['userEmail']
    assert obj.accessInformation.accessAlias == device_fixture_response['accessInformation']['accessAlias']
    assert obj.accessInformation.accessAdmin == device_fixture_response['accessInformation']['accessAdmin']
    assert obj.accessInformation.accessCreated == device_fixture_response['accessInformation']['accessCreated']
    assert obj.accesses[0].accessId == device_fixture_response['accesses'][0]['accessId']
    assert obj.accesses[0].thingName == device_fixture_response['accesses'][0]['thingName']
    assert obj.accesses[0].userId == device_fixture_response['accesses'][0]['userId']
    assert obj.accesses[0].idpAccountId == device_fixture_response['accesses'][0]['idpAccountId']
    assert obj.accesses[0].userEmail == device_fixture_response['accesses'][0]['userEmail']
    assert obj.accesses[0].accessAlias == device_fixture_response['accesses'][0]['accessAlias']
    assert obj.accesses[0].accessAdmin == device_fixture_response['accesses'][0]['accessAdmin']
    assert obj.accesses[0].accessCreated == device_fixture_response['accesses'][0]['accessCreated']
    assert obj.thingState.state.reported.isConnected == device_fixture_response['thingState']['state']['reported']['isConnected']
    assert obj.thingState.state.reported.rssi == device_fixture_response['thingState']['state']['reported']['rssi']
    assert obj.thingState.state.reported.batteryLevel == device_fixture_response['thingState']['state']['reported']['batteryLevel']
    assert obj.thingState.state.reported.operationState == device_fixture_response['thingState']['state']['reported']['operationState']
    assert obj.thingState.state.reported.operationSubState == device_fixture_response['thingState']['state']['reported']['operationSubState']
    assert obj.thingState.state.reported.operationSituation == device_fixture_response['thingState']['state']['reported']['operationSituation']
    assert obj.thingState.state.reported.operationError.code == device_fixture_response['thingState']['state']['reported']['operationError']['code']
    assert obj.thingState.state.reported.operationError.type == device_fixture_response['thingState']['state']['reported']['operationError']['type']
    assert obj.thingState.state.reported.operationError.description == device_fixture_response['thingState']['state']['reported']['operationError']['description']
    assert obj.thingState.state.reported.nextOperation == device_fixture_response['thingState']['state']['reported']['nextOperation']
    assert obj.thingState.state.reported.remainingDuration == device_fixture_response['thingState']['state']['reported']['remainingDuration']
    assert obj.thingState.state.reported.operationTimeTotal == device_fixture_response['thingState']['state']['reported']['operationTimeTotal']
    assert obj.thingState.state.reported.operationTimeMowing == device_fixture_response['thingState']['state']['reported']['operationTimeMowing']
    assert obj.thingState.state.reported.operationTimeWheelMotorLeft == device_fixture_response['thingState']['state']['reported']['operationTimeWheelMotorLeft']
    assert obj.thingState.state.reported.operationTimeWheelMotorRight == device_fixture_response['thingState']['state']['reported']['operationTimeWheelMotorRight']
    assert obj.thingState.state.reported.operationTimeBlade == device_fixture_response['thingState']['state']['reported']['operationTimeBlade']
    assert obj.thingState.state.reported.mowingCycles == device_fixture_response['thingState']['state']['reported']['mowingCycles']
    assert obj.thingState.state.reported.chargingCycles == device_fixture_response['thingState']['state']['reported']['chargingCycles']
    assert obj.thingState.state.reported.remainingBladeLifetime == device_fixture_response['thingState']['state']['reported']['remainingBladeLifetime']
    assert obj.thingState.state.reported.rtc == device_fixture_response['thingState']['state']['reported']['rtc']
    assert obj.thingState.state.reported.languageSettings.selected == device_fixture_response['thingState']['state']['reported']['languageSettings']['selected']
    assert obj.thingState.state.reported.languageSettings.supported[0] == device_fixture_response['thingState']['state']['reported']['languageSettings']['supported'][0]
    assert obj.thingState.state.reported.chargingCurrent == device_fixture_response['thingState']['state']['reported']['chargingCurrent']
    assert obj.thingState.state.reported.tiltSlope == device_fixture_response['thingState']['state']['reported']['tiltSlope']
    assert obj.thingState.state.reported.entryPoints[0] == device_fixture_response['thingState']['state']['reported']['entryPoints'][0]
    assert obj.thingState.state.reported.rainSensor == device_fixture_response['thingState']['state']['reported']['rainSensor']
    assert obj.thingState.state.reported.rainDelay == device_fixture_response['thingState']['state']['reported']['rainDelay']
    assert obj.thingState.state.reported.ecoMode == device_fixture_response['thingState']['state']['reported']['ecoMode']
    assert obj.thingState.state.reported.boundaryOverlap == device_fixture_response['thingState']['state']['reported']['boundaryOverlap']
    assert obj.thingState.state.reported.situationFlags.operationPermitted == device_fixture_response['thingState']['state']['reported']['situationFlags']['operationPermitted']
    assert obj.thingState.state.reported.situationFlags.batteryWeak == device_fixture_response['thingState']['state']['reported']['situationFlags']['batteryWeak']
    assert obj.thingState.state.reported.situationFlags.batteryFailure == device_fixture_response['thingState']['state']['reported']['situationFlags']['batteryFailure']
    assert obj.thingState.state.reported.situationFlags.batteryWeakSticky == device_fixture_response['thingState']['state']['reported']['situationFlags']['batteryWeakSticky']
    assert obj.thingState.state.reported.situationFlags.mowingWindow == device_fixture_response['thingState']['state']['reported']['situationFlags']['mowingWindow']
    assert obj.thingState.state.reported.situationFlags.marginMowingCompleted == device_fixture_response['thingState']['state']['reported']['situationFlags']['marginMowingCompleted']
    assert obj.thingState.state.reported.situationFlags.userInteraction == device_fixture_response['thingState']['state']['reported']['situationFlags']['userInteraction']
    assert obj.thingState.state.reported.situationFlags.loopSignalValid == device_fixture_response['thingState']['state']['reported']['situationFlags']['loopSignalValid']
    assert obj.thingState.state.reported.situationFlags.chargerContact == device_fixture_response['thingState']['state']['reported']['situationFlags']['chargerContact']
    assert obj.thingState.state.reported.situationFlags.chargerActive == device_fixture_response['thingState']['state']['reported']['situationFlags']['chargerActive']
    assert obj.thingState.state.reported.situationFlags.chargerAllowsRestart == device_fixture_response['thingState']['state']['reported']['situationFlags']['chargerAllowsRestart']
    assert obj.thingState.state.reported.situationFlags.chargerFailure == device_fixture_response['thingState']['state']['reported']['situationFlags']['chargerFailure']
    assert obj.thingState.state.reported.situationFlags.manualOperation == device_fixture_response['thingState']['state']['reported']['situationFlags']['manualOperation']
    assert obj.thingState.state.reported.situationFlags.robotIsActive == device_fixture_response['thingState']['state']['reported']['situationFlags']['robotIsActive']
    assert obj.thingState.state.reported.situationFlags.issueDisplay == device_fixture_response['thingState']['state']['reported']['situationFlags']['issueDisplay']
    assert obj.thingState.state.reported.situationFlags.homingTriggerSchedule == device_fixture_response['thingState']['state']['reported']['situationFlags']['homingTriggerSchedule']
    assert obj.thingState.state.reported.situationFlags.homingTriggerBatteryWaek == device_fixture_response['thingState']['state']['reported']['situationFlags']['homingTriggerBatteryWaek']
    assert obj.thingState.state.reported.situationFlags.homingTriggerUserRequest == device_fixture_response['thingState']['state']['reported']['situationFlags']['homingTriggerUserRequest']
    assert obj.thingState.state.reported.situationFlags.homingTriggerRain == device_fixture_response['thingState']['state']['reported']['situationFlags']['homingTriggerRain']
    assert obj.thingState.state.reported.situationFlags.homingTriggerTemperature == device_fixture_response['thingState']['state']['reported']['situationFlags']['homingTriggerTemperature']
    assert obj.thingState.state.reported.situationFlags.homingTriggerMowingUnitOverload == device_fixture_response['thingState']['state']['reported']['situationFlags']['homingTriggerMowingUnitOverload']
    assert obj.thingState.state.reported.situationFlags.homingTriggerRestart == device_fixture_response['thingState']['state']['reported']['situationFlags']['homingTriggerRestart']
    assert obj.thingState.state.reported.situationFlags.dayCancelled == device_fixture_response['thingState']['state']['reported']['situationFlags']['dayCancelled']
    assert obj.thingState.state.reported.situationFlags.rainDetected == device_fixture_response['thingState']['state']['reported']['situationFlags']['rainDetected']
    assert obj.thingState.state.reported.situationFlags.rainAllowsMowing == device_fixture_response['thingState']['state']['reported']['situationFlags']['rainAllowsMowing']
    assert obj.thingState.state.reported.situationFlags.temperatureMonitoringActive == device_fixture_response['thingState']['state']['reported']['situationFlags']['temperatureMonitoringActive']
    assert obj.thingState.state.reported.situationFlags.temperatureAllowsMowing == device_fixture_response['thingState']['state']['reported']['situationFlags']['temperatureAllowsMowing']
    assert obj.thingState.state.reported.situationFlags.temperatureAllowsHoming == device_fixture_response['thingState']['state']['reported']['situationFlags']['temperatureAllowsHoming']
    assert obj.thingState.state.reported.situationFlags.temperatureAllowsCharging == device_fixture_response['thingState']['state']['reported']['situationFlags']['temperatureAllowsCharging']
    assert obj.thingState.state.reported.situationFlags.wheelMotorTemperatureHigh == device_fixture_response['thingState']['state']['reported']['situationFlags']['wheelMotorTemperatureHigh']
    assert obj.thingState.state.reported.situationFlags.stopAfterIssue == device_fixture_response['thingState']['state']['reported']['situationFlags']['stopAfterIssue']
    assert obj.thingState.state.reported.situationFlags.bladeService == device_fixture_response['thingState']['state']['reported']['situationFlags']['bladeService']
    assert obj.thingState.state.reported.situationFlags.homingTriggerFrost == device_fixture_response['thingState']['state']['reported']['situationFlags']['homingTriggerFrost']
    assert obj.thingState.state.reported.situationFlags.frostDetected == device_fixture_response['thingState']['state']['reported']['situationFlags']['frostDetected']
    assert obj.thingState.state.reported.situationFlags.frostAllowsMowing == device_fixture_response['thingState']['state']['reported']['situationFlags']['frostAllowsMowing']
    assert obj.thingState.state.reported.situationFlags.smarthomeActive == device_fixture_response['thingState']['state']['reported']['situationFlags']['smarthomeActive']
    assert obj.thingState.state.reported.remainingDurationPercentage == device_fixture_response['thingState']['state']['reported']['remainingDurationPercentage']
    assert obj.thingState.state.reported.operationIssue.code == device_fixture_response['thingState']['state']['reported']['operationIssue']['code']
    assert obj.thingState.state.reported.operationIssue.class == device_fixture_response['thingState']['state']['reported']['operationIssue']['class']
    assert obj.thingState.state.reported.operationIssue.data == device_fixture_response['thingState']['state']['reported']['operationIssue']['data']
    assert obj.thingState.state.reported.operationIssue.flag == device_fixture_response['thingState']['state']['reported']['operationIssue']['flag']
    assert obj.thingState.state.reported.rainSensitivity == device_fixture_response['thingState']['state']['reported']['rainSensitivity']
    assert obj.thingState.state.reported.frostSensor == device_fixture_response['thingState']['state']['reported']['frostSensor']
    assert obj.thingState.state.reported.frostDelay == device_fixture_response['thingState']['state']['reported']['frostDelay']
    assert obj.thingState.state.reported.frostThreshold == device_fixture_response['thingState']['state']['reported']['frostThreshold']
    assert obj.thingState.state.reported.batteryWeakVoltage == device_fixture_response['thingState']['state']['reported']['batteryWeakVoltage']
    assert obj.thingState.state.reported.bladesService == device_fixture_response['thingState']['state']['reported']['bladesService']
    assert obj.thingState.state.reported.sideBumpTrigger == device_fixture_response['thingState']['state']['reported']['sideBumpTrigger']
    assert obj.thingState.state.reported.restartLevel == device_fixture_response['thingState']['state']['reported']['restartLevel']
    assert obj.thingState.state.reported.latSlopeCompUp == device_fixture_response['thingState']['state']['reported']['latSlopeCompUp']
    assert obj.thingState.state.reported.latSlopeCompDown == device_fixture_response['thingState']['state']['reported']['latSlopeCompDown']
    assert obj.thingState.state.reported.longDistanceTurn == device_fixture_response['thingState']['state']['reported']['longDistanceTurn']
    assert obj.thingState.state.reported.mowingStrategy == device_fixture_response['thingState']['state']['reported']['mowingStrategy']
    assert obj.thingState.state.reported.demoMode == device_fixture_response['thingState']['state']['reported']['demoMode']
    assert obj.thingState.state.reported.marginMowing == device_fixture_response['thingState']['state']['reported']['marginMowing']
    assert obj.thingState.state.reported.bladeSpeed == device_fixture_response['thingState']['state']['reported']['bladeSpeed']
    assert obj.thingState.state.reported.battery.chargingCurrent == device_fixture_response['thingState']['state']['reported']['battery']['chargingCurrent']
    assert obj.thingState.state.reported.battery.voltage == device_fixture_response['thingState']['state']['reported']['battery']['voltage']
    assert obj.thingState.state.reported.acceleration.x == device_fixture_response['thingState']['state']['reported']['acceleration']['x']
    assert obj.thingState.state.reported.acceleration.y == device_fixture_response['thingState']['state']['reported']['acceleration']['y']
    assert obj.thingState.state.reported.acceleration.z == device_fixture_response['thingState']['state']['reported']['acceleration']['z']
    assert obj.thingState.state.reported.hall.bumper == device_fixture_response['thingState']['state']['reported']['hall']['bumper']
    assert obj.thingState.state.reported.hall.x == device_fixture_response['thingState']['state']['reported']['hall']['x']
    assert obj.thingState.state.reported.hall.y == device_fixture_response['thingState']['state']['reported']['hall']['y']
    assert obj.thingState.state.reported.hall.bumperTriggered == device_fixture_response['thingState']['state']['reported']['hall']['bumperTriggered']
    assert obj.thingState.state.reported.hall.z == device_fixture_response['thingState']['state']['reported']['hall']['z']
    assert obj.thingState.state.reported.hall.value1 == device_fixture_response['thingState']['state']['reported']['hall']['value1']
    assert obj.thingState.state.reported.hall.value2 == device_fixture_response['thingState']['state']['reported']['hall']['value2']
    assert obj.thingState.state.reported.hall.value3 == device_fixture_response['thingState']['state']['reported']['hall']['value3']
    assert obj.thingState.state.reported.hall.value4 == device_fixture_response['thingState']['state']['reported']['hall']['value4']
    assert obj.thingState.state.reported.hall.value5 == device_fixture_response['thingState']['state']['reported']['hall']['value5']
    assert obj.thingState.state.reported.temperature.battery == device_fixture_response['thingState']['state']['reported']['temperature']['battery']
    assert obj.thingState.state.reported.temperature.motor == device_fixture_response['thingState']['state']['reported']['temperature']['motor']
    assert obj.thingState.state.reported.temperature.environment == device_fixture_response['thingState']['state']['reported']['temperature']['environment']
    assert obj.thingState.state.reported.rpm.set == device_fixture_response['thingState']['state']['reported']['rpm']['set']
    assert obj.thingState.state.reported.rpm.current == device_fixture_response['thingState']['state']['reported']['rpm']['current']
    assert obj.thingState.state.reported.motorCurrent.mowingUnit == device_fixture_response['thingState']['state']['reported']['motorCurrent']['mowingUnit']
    assert obj.thingState.state.reported.manualMarginMowing == device_fixture_response['thingState']['state']['reported']['manualMarginMowing']
    assert obj.thingState.state.reported.offPitch == device_fixture_response['thingState']['state']['reported']['offPitch']
    assert obj.thingState.state.reported.resetBladesService == device_fixture_response['thingState']['state']['reported']['resetBladesService']
    assert obj.thingState.state.reported.qhk.flag == device_fixture_response['thingState']['state']['reported']['qhk']['flag']
    assert obj.thingState.state.reported.qhk.angle == device_fixture_response['thingState']['state']['reported']['qhk']['angle']
    assert obj.thingState.state.reported.manualMowing.activityMode == device_fixture_response['thingState']['state']['reported']['manualMowing']['activityMode']
    assert obj.thingState.state.reported.manualMowing.marginMode == device_fixture_response['thingState']['state']['reported']['manualMowing']['marginMode']
    assert obj.thingState.state.reported.manualMowing.narrowPassageMode == device_fixture_response['thingState']['state']['reported']['manualMowing']['narrowPassageMode']
    assert obj.thingState.state.reported.manualMowing.startHour == device_fixture_response['thingState']['state']['reported']['manualMowing']['startHour']
    assert obj.thingState.state.reported.manualMowing.startMinute == device_fixture_response['thingState']['state']['reported']['manualMowing']['startMinute']
    assert obj.thingState.state.reported.manualMowing.duration == device_fixture_response['thingState']['state']['reported']['manualMowing']['duration']
    assert obj.thingState.state.reported.manualMowing.entryPoint == device_fixture_response['thingState']['state']['reported']['manualMowing']['entryPoint']
    assert obj.thingState.state.reported.ipaddress == device_fixture_response['thingState']['state']['reported']['ipaddress']
    assert obj.pim.artnumber == device_fixture_response['pim']['artnumber']
    assert obj.pim.accessoryList[0].id == device_fixture_response['pim']['accessoryList'][0]['id']
    assert obj.pim.accessoryList[0].artnumber == device_fixture_response['pim']['accessoryList'][0]['artnumber']
    assert obj.pim.price == device_fixture_response['pim']['price']
    assert obj.pim.brand[0].id == device_fixture_response['pim']['brand'][0]['id']
    assert obj.pim.brand[0].name == device_fixture_response['pim']['brand'][0]['name']
    assert obj.pim.additionalDocuments[0].doctype == device_fixture_response['pim']['additionalDocuments'][0]['doctype']
    assert obj.pim.additionalDocuments[0].docid == device_fixture_response['pim']['additionalDocuments'][0]['docid']
    assert obj.pim.additionalDocuments[0].docstorecat == device_fixture_response['pim']['additionalDocuments'][0]['docstorecat']
    assert obj.pim.additionalDocuments[0].docname == device_fixture_response['pim']['additionalDocuments'][0]['docname']
    assert obj.pim.additionalDocuments[0].docnumber == device_fixture_response['pim']['additionalDocuments'][0]['docnumber']
    assert obj.pim.additionalDocuments[0].version == device_fixture_response['pim']['additionalDocuments'][0]['version']
    assert obj.pim.title == device_fixture_response['pim']['title']
    assert obj.pim.productHierarchy == device_fixture_response['pim']['productHierarchy']
    assert obj.pim.crosssellingList[0].id == device_fixture_response['pim']['crosssellingList'][0]['id']
    assert obj.pim.crosssellingList[0].artnumber == device_fixture_response['pim']['crosssellingList'][0]['artnumber']
    assert obj.pim.attributeList[0].id == device_fixture_response['pim']['attributeList'][0]['id']
    assert obj.pim.attributeList[0].key == device_fixture_response['pim']['attributeList'][0]['key']
    assert obj.pim.attributeList[0].name == device_fixture_response['pim']['attributeList'][0]['name']
    assert obj.pim.attributeList[0].attrtype == device_fixture_response['pim']['attributeList'][0]['attrtype']
    assert obj.pim.attributeList[0].internalValue == device_fixture_response['pim']['attributeList'][0]['internalValue']
    assert obj.pim.attributeList[0].label == device_fixture_response['pim']['attributeList'][0]['label']
    assert obj.pim.attributeList[0].value_from == device_fixture_response['pim']['attributeList'][0]['value_from']
    assert obj.pim.attributeList[0].value_to == device_fixture_response['pim']['attributeList'][0]['value_to']
    assert obj.pim.attributeList[0].unit == device_fixture_response['pim']['attributeList'][0]['unit']
    assert obj.pim.attributeList[0].value_once == device_fixture_response['pim']['attributeList'][0]['value_once']
    assert obj.pim.attributeList[0].parent == device_fixture_response['pim']['attributeList'][0]['parent']
    assert obj.pim.attributeList[0].showShop == device_fixture_response['pim']['attributeList'][0]['showShop']
    assert obj.pim.attributeList[0].showDatasheet == device_fixture_response['pim']['attributeList'][0]['showDatasheet']
    assert obj.pim.attributeList[0].group == device_fixture_response['pim']['attributeList'][0]['group']
    assert obj.pim.appimages[0].image == device_fixture_response['pim']['appimages'][0]['image']
