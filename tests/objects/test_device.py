"""
Generated by generator/generator.py - 2021-07-05 19:30:20.823243
"""
from pyalko.objects.device import AlkoDevice
from tests.responses.device_fixture import device_fixture_response


def test_device(device_fixture_response):
    obj = AlkoDevice(None, device_fixture_response)
    assert obj.thingName == device_fixture_response["thingName"]
    assert obj.thingType == device_fixture_response["thingType"]
    assert (
        obj.thingAttributes.articleNumber
        == device_fixture_response["thingAttributes"]["articleNumber"]
    )
    assert (
        obj.thingAttributes.firmwareMain
        == device_fixture_response["thingAttributes"]["firmwareMain"]
    )
    assert (
        obj.thingAttributes.firmwareMainLocalization
        == device_fixture_response["thingAttributes"]["firmwareMainLocalization"]
    )
    assert (
        obj.thingAttributes.firmwareWifi
        == device_fixture_response["thingAttributes"]["firmwareWifi"]
    )
    assert (
        obj.thingAttributes.firmwareWifiDriver
        == device_fixture_response["thingAttributes"]["firmwareWifiDriver"]
    )
    assert (
        obj.thingAttributes.fotaMode
        == device_fixture_response["thingAttributes"]["fotaMode"]
    )
    assert (
        obj.thingAttributes.hardwareVersionMain
        == device_fixture_response["thingAttributes"]["hardwareVersionMain"]
    )
    assert (
        obj.thingAttributes.hardwareVersionWifi
        == device_fixture_response["thingAttributes"]["hardwareVersionWifi"]
    )
    assert (
        obj.thingAttributes.serialNumberMain
        == device_fixture_response["thingAttributes"]["serialNumberMain"]
    )
    assert (
        obj.thingAttributes.serialNumberWifi
        == device_fixture_response["thingAttributes"]["serialNumberWifi"]
    )
    assert (
        obj.thingAttributes.thingModel
        == device_fixture_response["thingAttributes"]["thingModel"]
    )
    assert (
        obj.thingAttributes.thingName
        == device_fixture_response["thingAttributes"]["thingName"]
    )
    assert (
        obj.thingAttributes.thingType
        == device_fixture_response["thingAttributes"]["thingType"]
    )
    assert (
        obj.accessInformation.accessAdmin
        == device_fixture_response["accessInformation"]["accessAdmin"]
    )
    assert (
        obj.accessInformation.thingName
        == device_fixture_response["accessInformation"]["thingName"]
    )
    assert (
        obj.accessInformation.userEmail
        == device_fixture_response["accessInformation"]["userEmail"]
    )
    assert (
        obj.accessInformation.accessId
        == device_fixture_response["accessInformation"]["accessId"]
    )
    assert (
        obj.accessInformation.accessAlias
        == device_fixture_response["accessInformation"]["accessAlias"]
    )
    assert (
        obj.accessInformation.userId
        == device_fixture_response["accessInformation"]["userId"]
    )
    assert (
        obj.accessInformation.accessCreated
        == device_fixture_response["accessInformation"]["accessCreated"]
    )
    assert (
        obj.accesses[0].accessAdmin
        == device_fixture_response["accesses"][0]["accessAdmin"]
    )
    assert (
        obj.accesses[0].thingName == device_fixture_response["accesses"][0]["thingName"]
    )
    assert (
        obj.accesses[0].userEmail == device_fixture_response["accesses"][0]["userEmail"]
    )
    assert (
        obj.accesses[0].accessId == device_fixture_response["accesses"][0]["accessId"]
    )
    assert (
        obj.accesses[0].accessAlias
        == device_fixture_response["accesses"][0]["accessAlias"]
    )
    assert obj.accesses[0].userId == device_fixture_response["accesses"][0]["userId"]
    assert (
        obj.accesses[0].accessCreated
        == device_fixture_response["accesses"][0]["accessCreated"]
    )
    assert (
        obj.thingState.state.reported.isConnected
        == device_fixture_response["thingState"]["state"]["reported"]["isConnected"]
    )
    assert (
        obj.thingState.state.reported.rssi
        == device_fixture_response["thingState"]["state"]["reported"]["rssi"]
    )
    assert (
        obj.thingState.state.reported.batteryLevel
        == device_fixture_response["thingState"]["state"]["reported"]["batteryLevel"]
    )
    assert (
        obj.thingState.state.reported.operationState
        == device_fixture_response["thingState"]["state"]["reported"]["operationState"]
    )
    assert (
        obj.thingState.state.reported.operationSubState
        == device_fixture_response["thingState"]["state"]["reported"][
            "operationSubState"
        ]
    )
    assert (
        obj.thingState.state.reported.operationSituation
        == device_fixture_response["thingState"]["state"]["reported"][
            "operationSituation"
        ]
    )
    assert (
        obj.thingState.state.reported.operationError.code
        == device_fixture_response["thingState"]["state"]["reported"]["operationError"][
            "code"
        ]
    )
    assert (
        obj.thingState.state.reported.operationError.type
        == device_fixture_response["thingState"]["state"]["reported"]["operationError"][
            "type"
        ]
    )
    assert (
        obj.thingState.state.reported.operationError.description
        == device_fixture_response["thingState"]["state"]["reported"]["operationError"][
            "description"
        ]
    )
    assert (
        obj.thingState.state.reported.nextOperation
        == device_fixture_response["thingState"]["state"]["reported"]["nextOperation"]
    )
    assert (
        obj.thingState.state.reported.remainingDuration
        == device_fixture_response["thingState"]["state"]["reported"][
            "remainingDuration"
        ]
    )
    assert (
        obj.thingState.state.reported.operationTimeTotal
        == device_fixture_response["thingState"]["state"]["reported"][
            "operationTimeTotal"
        ]
    )
    assert (
        obj.thingState.state.reported.operationTimeMowing
        == device_fixture_response["thingState"]["state"]["reported"][
            "operationTimeMowing"
        ]
    )
    assert (
        obj.thingState.state.reported.operationTimeWheelMotorLeft
        == device_fixture_response["thingState"]["state"]["reported"][
            "operationTimeWheelMotorLeft"
        ]
    )
    assert (
        obj.thingState.state.reported.operationTimeWheelMotorRight
        == device_fixture_response["thingState"]["state"]["reported"][
            "operationTimeWheelMotorRight"
        ]
    )
    assert (
        obj.thingState.state.reported.operationTimeBlade
        == device_fixture_response["thingState"]["state"]["reported"][
            "operationTimeBlade"
        ]
    )
    assert (
        obj.thingState.state.reported.mowingCycles
        == device_fixture_response["thingState"]["state"]["reported"]["mowingCycles"]
    )
    assert (
        obj.thingState.state.reported.chargingCycles
        == device_fixture_response["thingState"]["state"]["reported"]["chargingCycles"]
    )
    assert (
        obj.thingState.state.reported.remainingBladeLifetime
        == device_fixture_response["thingState"]["state"]["reported"][
            "remainingBladeLifetime"
        ]
    )
    assert (
        obj.thingState.state.reported.rtc
        == device_fixture_response["thingState"]["state"]["reported"]["rtc"]
    )
    assert (
        obj.thingState.state.reported.languageSettings.selected
        == device_fixture_response["thingState"]["state"]["reported"][
            "languageSettings"
        ]["selected"]
    )
    assert (
        obj.thingState.state.reported.languageSettings.supported[0]
        == device_fixture_response["thingState"]["state"]["reported"][
            "languageSettings"
        ]["supported"][0]
    )
    assert (
        obj.thingState.state.reported.chargingCurrent
        == device_fixture_response["thingState"]["state"]["reported"]["chargingCurrent"]
    )
    assert (
        obj.thingState.state.reported.tiltSlope
        == device_fixture_response["thingState"]["state"]["reported"]["tiltSlope"]
    )
    assert (
        obj.thingState.state.reported.entryPoints[0]
        == device_fixture_response["thingState"]["state"]["reported"]["entryPoints"][0]
    )
    assert (
        obj.thingState.state.reported.rainSensor
        == device_fixture_response["thingState"]["state"]["reported"]["rainSensor"]
    )
    assert (
        obj.thingState.state.reported.rainDelay
        == device_fixture_response["thingState"]["state"]["reported"]["rainDelay"]
    )
    assert (
        obj.thingState.state.reported.ecoMode
        == device_fixture_response["thingState"]["state"]["reported"]["ecoMode"]
    )
    assert (
        obj.thingState.state.reported.boundaryOverlap
        == device_fixture_response["thingState"]["state"]["reported"]["boundaryOverlap"]
    )
    assert (
        obj.thingState.state.reported.situationFlags.operationPermitted
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "operationPermitted"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.batteryWeak
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "batteryWeak"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.batteryFailure
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "batteryFailure"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.batteryWeakSticky
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "batteryWeakSticky"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.mowingWindow
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "mowingWindow"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.marginMowingCompleted
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "marginMowingCompleted"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.userInteraction
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "userInteraction"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.loopSignalValid
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "loopSignalValid"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.chargerContact
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "chargerContact"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.chargerActive
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "chargerActive"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.chargerAllowsRestart
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "chargerAllowsRestart"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.chargerFailure
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "chargerFailure"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.manualOperation
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "manualOperation"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.robotIsActive
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "robotIsActive"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.issueDisplay
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "issueDisplay"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.homingTriggerSchedule
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "homingTriggerSchedule"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.homingTriggerBatteryWaek
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "homingTriggerBatteryWaek"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.homingTriggerUserRequest
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "homingTriggerUserRequest"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.homingTriggerRain
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "homingTriggerRain"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.homingTriggerTemperature
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "homingTriggerTemperature"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.homingTriggerMowingUnitOverload
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "homingTriggerMowingUnitOverload"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.homingTriggerRestart
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "homingTriggerRestart"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.dayCancelled
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "dayCancelled"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.rainDetected
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "rainDetected"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.rainAllowsMowing
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "rainAllowsMowing"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.temperatureMonitoringActive
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "temperatureMonitoringActive"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.temperatureAllowsMowing
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "temperatureAllowsMowing"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.temperatureAllowsHoming
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "temperatureAllowsHoming"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.temperatureAllowsCharging
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "temperatureAllowsCharging"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.wheelMotorTemperatureHigh
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "wheelMotorTemperatureHigh"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.stopAfterIssue
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "stopAfterIssue"
        ]
    )
    assert (
        obj.thingState.state.reported.situationFlags.bladeService
        == device_fixture_response["thingState"]["state"]["reported"]["situationFlags"][
            "bladeService"
        ]
    )
    assert obj.thingState.version == device_fixture_response["thingState"]["version"]
    assert (
        obj.thingState.timestamp == device_fixture_response["thingState"]["timestamp"]
    )
    assert obj.pim.articleNumber == device_fixture_response["pim"]["articleNumber"]
    assert obj.pim.ean == device_fixture_response["pim"]["ean"]
    assert obj.pim.name == device_fixture_response["pim"]["name"]
    assert (
        obj.pim.additionalDocuments[0].docname
        == device_fixture_response["pim"]["additionalDocuments"][0]["docname"]
    )
    assert (
        obj.pim.additionalDocuments[0].doctype
        == device_fixture_response["pim"]["additionalDocuments"][0]["doctype"]
    )
    assert (
        obj.pim.additionalDocuments[0].version
        == device_fixture_response["pim"]["additionalDocuments"][0]["version"]
    )
    assert (
        obj.pim.additionalDocuments[0].fullpath
        == device_fixture_response["pim"]["additionalDocuments"][0]["fullpath"]
    )
    assert obj.pim.brand[0].name == device_fixture_response["pim"]["brand"][0]["name"]
    assert obj.pim.images[0] == device_fixture_response["pim"]["images"][0]
